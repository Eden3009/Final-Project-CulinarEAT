{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edens\\\\Desktop\\\\Final Project\\\\src\\\\AddRecipePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/AddRecipePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddRecipePage() {\n  _s();\n  const [recipeName, setRecipeName] = useState('');\n  const [description, setDescription] = useState('');\n  const [ingredients, setIngredients] = useState([{\n    quantity: '',\n    measure: '',\n    ingredient: ''\n  }]);\n  const [instructions, setInstructions] = useState(['']);\n  const [photo, setPhoto] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n  const measures = [{\n    MeasureID: 'mg',\n    MeasureName: 'mg'\n  }, {\n    MeasureID: 'g',\n    MeasureName: 'g'\n  }, {\n    MeasureID: 'kg',\n    MeasureName: 'kg'\n  }, {\n    MeasureID: 'oz',\n    MeasureName: 'oz'\n  }, {\n    MeasureID: 'lb',\n    MeasureName: 'lb'\n  }, {\n    MeasureID: 'ml',\n    MeasureName: 'ml'\n  }, {\n    MeasureID: 'liter',\n    MeasureName: 'liter'\n  }, {\n    MeasureID: 'cup',\n    MeasureName: 'Cup'\n  }, {\n    MeasureID: 'tbsp',\n    MeasureName: 'Tbsp'\n  }, {\n    MeasureID: 'tsp',\n    MeasureName: 'Tsp'\n  }, {\n    MeasureID: 'fl oz',\n    MeasureName: 'fl oz'\n  }, {\n    MeasureID: 'quart',\n    MeasureName: 'Quart'\n  }, {\n    MeasureID: 'pint',\n    MeasureName: 'Pint'\n  }, {\n    MeasureID: 'unit',\n    MeasureName: 'Unit'\n  }];\n  const isOnlyLetters = text => /^[A-Za-z\\s]+$/.test(text);\n  const isNumeric = value => /^[0-9]+$/.test(value);\n  const isImageFile = file => file && file.type.startsWith(\"image/\");\n  const validateForm = () => {\n    const errors = {};\n    if (!recipeName || !isOnlyLetters(recipeName)) {\n      errors.recipeName = 'Recipe name should contain only letters and spaces.';\n    }\n    if (!description || description.length < 10) {\n      errors.description = 'Description should be at least 10 characters long.';\n    }\n    ingredients.forEach((ingredient, index) => {\n      if (!isNumeric(ingredient.quantity)) {\n        errors[`quantity${index}`] = 'Quantity should contain only numbers.';\n      }\n      if (!ingredient.measure) {\n        errors[`measure${index}`] = 'Please select a measure.';\n      }\n      if (!isOnlyLetters(ingredient.ingredient)) {\n        errors[`ingredient${index}`] = 'Ingredient name should contain only letters and spaces.';\n      }\n    });\n    instructions.forEach((instruction, index) => {\n      if (!instruction || instruction.length < 5) {\n        errors[`instruction${index}`] = 'Each step should be at least 5 characters long.';\n      }\n    });\n    if (photo && !isImageFile(photo)) {\n      errors.photo = 'Please upload a valid image file.';\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleAddIngredient = () => {\n    setIngredients([...ingredients, {\n      quantity: '',\n      measure: '',\n      ingredient: ''\n    }]);\n  };\n  const handleDeleteIngredient = index => {\n    const newIngredients = ingredients.filter((_, i) => i !== index);\n    setIngredients(newIngredients);\n  };\n  const handleIngredientChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newIngredients = [...ingredients];\n    newIngredients[index][name] = value;\n    setIngredients(newIngredients);\n  };\n  const handleAddInstruction = () => {\n    setInstructions([...instructions, '']);\n  };\n  const handleDeleteInstruction = index => {\n    const newInstructions = instructions.filter((_, i) => i !== index);\n    setInstructions(newInstructions);\n  };\n  const handleInstructionChange = (index, event) => {\n    const newInstructions = [...instructions];\n    newInstructions[index] = event.target.value;\n    setInstructions(newInstructions);\n  };\n  const handlePhotoChange = event => {\n    setPhoto(event.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      setErrorMessage('Please fix the errors in the form.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('recipeName', recipeName);\n    formData.append('description', description);\n    formData.append('ingredients', JSON.stringify(ingredients));\n    formData.append('instructions', JSON.stringify(instructions));\n    if (photo) formData.append('photo', photo);\n    try {\n      // Replace with your actual API endpoint\n      const response = await fetch('http://localhost:5001/add-recipe', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      setSuccessMessage('Recipe added successfully!');\n      setErrorMessage('');\n      console.log(result);\n    } catch (error) {\n      setErrorMessage('An error occurred while adding the recipe. Please try again.');\n      console.error('Error adding recipe:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-recipe-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeName\",\n          children: \"Recipe Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"recipeName\",\n          value: recipeName,\n          onChange: e => setRecipeName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), formErrors.recipeName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: formErrors.recipeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Add a short description of the recipe\",\n          required: true,\n          className: \"full-width-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), formErrors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: formErrors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"quantity\",\n          placeholder: \"Quantity\",\n          value: ingredient.quantity,\n          onChange: e => handleIngredientChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), formErrors[`quantity${index}`] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: formErrors[`quantity${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"measure\",\n          value: ingredient.measure,\n          onChange: e => handleIngredientChange(index, e),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Measure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), measures.map(measure => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: measure.MeasureID,\n            children: measure.MeasureName\n          }, measure.MeasureID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), formErrors[`measure${index}`] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: formErrors[`measure${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 59\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"ingredient\",\n          placeholder: \"Ingredient\",\n          value: ingredient.ingredient,\n          onChange: e => handleIngredientChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), formErrors[`ingredient${index}`] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: formErrors[`ingredient${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 62\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddIngredient,\n          className: \"add-button\",\n          children: \"+ Add Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDeleteIngredient(ingredients.length - 1),\n          className: \"delete-button\",\n          children: \"- Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instruction-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: `Step ${index + 1}`,\n          value: instruction,\n          onChange: e => handleInstructionChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), formErrors[`instruction${index}`] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: formErrors[`instruction${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 63\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddInstruction,\n          className: \"add-button\",\n          children: \"+ Add Step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDeleteInstruction(instructions.length - 1),\n          className: \"delete-button\",\n          children: \"- Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group form-group-photo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"photo\",\n          children: \"Photo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"photo\",\n          onChange: handlePhotoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), formErrors.photo && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: formErrors.photo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 36\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n_s(AddRecipePage, \"OL4mcFifWhZ3a7uYuso1nyPxYiA=\");\n_c = AddRecipePage;\nexport default AddRecipePage;\nvar _c;\n$RefreshReg$(_c, \"AddRecipePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddRecipePage","_s","recipeName","setRecipeName","description","setDescription","ingredients","setIngredients","quantity","measure","ingredient","instructions","setInstructions","photo","setPhoto","successMessage","setSuccessMessage","errorMessage","setErrorMessage","formErrors","setFormErrors","measures","MeasureID","MeasureName","isOnlyLetters","text","test","isNumeric","value","isImageFile","file","type","startsWith","validateForm","errors","length","forEach","index","instruction","Object","keys","handleAddIngredient","handleDeleteIngredient","newIngredients","filter","_","i","handleIngredientChange","event","name","target","handleAddInstruction","handleDeleteInstruction","newInstructions","handleInstructionChange","handlePhotoChange","files","handleSubmit","e","preventDefault","formData","FormData","append","JSON","stringify","response","fetch","method","body","result","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","placeholder","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/edens/Desktop/Final Project/src/AddRecipePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './css/AddRecipePage.css';\r\n\r\nfunction AddRecipePage() {\r\n    const [recipeName, setRecipeName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [ingredients, setIngredients] = useState([{ quantity: '', measure: '', ingredient: '' }]);\r\n    const [instructions, setInstructions] = useState(['']);\r\n    const [photo, setPhoto] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [formErrors, setFormErrors] = useState({});\r\n\r\n    const measures = [\r\n        { MeasureID: 'mg', MeasureName: 'mg' },\r\n        { MeasureID: 'g', MeasureName: 'g' },\r\n        { MeasureID: 'kg', MeasureName: 'kg' },\r\n        { MeasureID: 'oz', MeasureName: 'oz' },\r\n        { MeasureID: 'lb', MeasureName: 'lb' },\r\n        { MeasureID: 'ml', MeasureName: 'ml' },\r\n        { MeasureID: 'liter', MeasureName: 'liter' },\r\n        { MeasureID: 'cup', MeasureName: 'Cup' },\r\n        { MeasureID: 'tbsp', MeasureName: 'Tbsp' },\r\n        { MeasureID: 'tsp', MeasureName: 'Tsp' },\r\n        { MeasureID: 'fl oz', MeasureName: 'fl oz' },\r\n        { MeasureID: 'quart', MeasureName: 'Quart' },\r\n        { MeasureID: 'pint', MeasureName: 'Pint' },\r\n        { MeasureID: 'unit', MeasureName: 'Unit' }\r\n    ];\r\n\r\n    const isOnlyLetters = (text) => /^[A-Za-z\\s]+$/.test(text);\r\n    const isNumeric = (value) => /^[0-9]+$/.test(value);\r\n    const isImageFile = (file) => file && file.type.startsWith(\"image/\");\r\n\r\n    const validateForm = () => {\r\n        const errors = {};\r\n        if (!recipeName || !isOnlyLetters(recipeName)) {\r\n            errors.recipeName = 'Recipe name should contain only letters and spaces.';\r\n        }\r\n        if (!description || description.length < 10) {\r\n            errors.description = 'Description should be at least 10 characters long.';\r\n        }\r\n        ingredients.forEach((ingredient, index) => {\r\n            if (!isNumeric(ingredient.quantity)) {\r\n                errors[`quantity${index}`] = 'Quantity should contain only numbers.';\r\n            }\r\n            if (!ingredient.measure) {\r\n                errors[`measure${index}`] = 'Please select a measure.';\r\n            }\r\n            if (!isOnlyLetters(ingredient.ingredient)) {\r\n                errors[`ingredient${index}`] = 'Ingredient name should contain only letters and spaces.';\r\n            }\r\n        });\r\n        instructions.forEach((instruction, index) => {\r\n            if (!instruction || instruction.length < 5) {\r\n                errors[`instruction${index}`] = 'Each step should be at least 5 characters long.';\r\n            }\r\n        });\r\n        if (photo && !isImageFile(photo)) {\r\n            errors.photo = 'Please upload a valid image file.';\r\n        }\r\n        setFormErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleAddIngredient = () => {\r\n        setIngredients([...ingredients, { quantity: '', measure: '', ingredient: '' }]);\r\n    };\r\n\r\n    const handleDeleteIngredient = (index) => {\r\n        const newIngredients = ingredients.filter((_, i) => i !== index);\r\n        setIngredients(newIngredients);\r\n    };\r\n\r\n    const handleIngredientChange = (index, event) => {\r\n        const { name, value } = event.target;\r\n        const newIngredients = [...ingredients];\r\n        newIngredients[index][name] = value;\r\n        setIngredients(newIngredients);\r\n    };\r\n\r\n    const handleAddInstruction = () => {\r\n        setInstructions([...instructions, '']);\r\n    };\r\n\r\n    const handleDeleteInstruction = (index) => {\r\n        const newInstructions = instructions.filter((_, i) => i !== index);\r\n        setInstructions(newInstructions);\r\n    };\r\n\r\n    const handleInstructionChange = (index, event) => {\r\n        const newInstructions = [...instructions];\r\n        newInstructions[index] = event.target.value;\r\n        setInstructions(newInstructions);\r\n    };\r\n\r\n    const handlePhotoChange = (event) => {\r\n        setPhoto(event.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!validateForm()) {\r\n            setErrorMessage('Please fix the errors in the form.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('recipeName', recipeName);\r\n        formData.append('description', description);\r\n        formData.append('ingredients', JSON.stringify(ingredients));\r\n        formData.append('instructions', JSON.stringify(instructions));\r\n        if (photo) formData.append('photo', photo);\r\n\r\n        try {\r\n            // Replace with your actual API endpoint\r\n            const response = await fetch('http://localhost:5001/add-recipe', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            const result = await response.json();\r\n            setSuccessMessage('Recipe added successfully!');\r\n            setErrorMessage('');\r\n            console.log(result);\r\n        } catch (error) {\r\n            setErrorMessage('An error occurred while adding the recipe. Please try again.');\r\n            console.error('Error adding recipe:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-recipe-page\">\r\n            <h2>Add a New Recipe</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"recipeName\">Recipe Name:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"recipeName\" \r\n                        value={recipeName} \r\n                        onChange={(e) => setRecipeName(e.target.value)} \r\n                        required \r\n                    />\r\n                    {formErrors.recipeName && <span className=\"error-text\">{formErrors.recipeName}</span>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <textarea\r\n                        id=\"description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        placeholder=\"Add a short description of the recipe\"\r\n                        required\r\n                        className=\"full-width-textarea\"\r\n                    />\r\n                    {formErrors.description && <span className=\"error-text\">{formErrors.description}</span>}\r\n                </div>\r\n\r\n                <h3>Ingredients</h3>\r\n                {ingredients.map((ingredient, index) => (\r\n                    <div key={index} className=\"ingredient-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"quantity\" \r\n                            placeholder=\"Quantity\" \r\n                            value={ingredient.quantity} \r\n                            onChange={(e) => handleIngredientChange(index, e)} \r\n                            required \r\n                        />\r\n                        {formErrors[`quantity${index}`] && <span className=\"error-text\">{formErrors[`quantity${index}`]}</span>}\r\n                        <select\r\n                            name=\"measure\"\r\n                            value={ingredient.measure}\r\n                            onChange={(e) => handleIngredientChange(index, e)}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Measure</option>\r\n                            {measures.map(measure => (\r\n                                <option key={measure.MeasureID} value={measure.MeasureID}>\r\n                                    {measure.MeasureName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {formErrors[`measure${index}`] && <span className=\"error-text\">{formErrors[`measure${index}`]}</span>}\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"ingredient\" \r\n                            placeholder=\"Ingredient\" \r\n                            value={ingredient.ingredient} \r\n                            onChange={(e) => handleIngredientChange(index, e)} \r\n                            required \r\n                        />\r\n                        {formErrors[`ingredient${index}`] && <span className=\"error-text\">{formErrors[`ingredient${index}`]}</span>}\r\n                    </div>\r\n                ))}\r\n                <div className=\"button-group-inline\">\r\n                    <button type=\"button\" onClick={handleAddIngredient} className=\"add-button\">+ Add Ingredient</button>\r\n                    <button type=\"button\" onClick={() => handleDeleteIngredient(ingredients.length - 1)} className=\"delete-button\">- Delete</button>\r\n                </div>\r\n\r\n                <h3>Instructions</h3>\r\n                {instructions.map((instruction, index) => (\r\n                    <div key={index} className=\"instruction-group\">\r\n                        <textarea\r\n                            placeholder={`Step ${index + 1}`}\r\n                            value={instruction}\r\n                            onChange={(e) => handleInstructionChange(index, e)}\r\n                            required\r\n                        />\r\n                        {formErrors[`instruction${index}`] && <span className=\"error-text\">{formErrors[`instruction${index}`]}</span>}\r\n                    </div>\r\n                ))}\r\n                <div className=\"button-group-inline\">\r\n                    <button type=\"button\" onClick={handleAddInstruction} className=\"add-button\">+ Add Step</button>\r\n                    <button type=\"button\" onClick={() => handleDeleteInstruction(instructions.length - 1)} className=\"delete-button\">- Delete</button>\r\n                </div>\r\n\r\n                <div className=\"form-group form-group-photo\">\r\n                    <label htmlFor=\"photo\">Photo:</label>\r\n                    <input type=\"file\" id=\"photo\" onChange={handlePhotoChange} />\r\n                    {formErrors.photo && <span className=\"error-text\">{formErrors.photo}</span>}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"submit-button\">Submit Recipe</button>\r\n\r\n                {successMessage && <div className=\"success\">{successMessage}</div>}\r\n                {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddRecipePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}