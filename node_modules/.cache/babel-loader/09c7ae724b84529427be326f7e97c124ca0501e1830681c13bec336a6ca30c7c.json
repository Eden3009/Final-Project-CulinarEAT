{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edens\\\\Desktop\\\\Final Project\\\\src\\\\AddRecipePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/AddRecipePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddRecipePage() {\n  _s();\n  const [recipeName, setRecipeName] = useState('');\n  const [description, setDescription] = useState('');\n  const [ingredients, setIngredients] = useState([{\n    quantity: '',\n    measure: '',\n    ingredient: ''\n  }]);\n  const [instructions, setInstructions] = useState(['']);\n  const [photo, setPhoto] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n  const measures = [{\n    MeasureID: 'mg',\n    MeasureName: 'mg'\n  }, {\n    MeasureID: 'g',\n    MeasureName: 'g'\n  }, {\n    MeasureID: 'kg',\n    MeasureName: 'kg'\n  }, {\n    MeasureID: 'oz',\n    MeasureName: 'oz'\n  }, {\n    MeasureID: 'lb',\n    MeasureName: 'lb'\n  }, {\n    MeasureID: 'ml',\n    MeasureName: 'ml'\n  }, {\n    MeasureID: 'liter',\n    MeasureName: 'liter'\n  }, {\n    MeasureID: 'cup',\n    MeasureName: 'Cup'\n  }, {\n    MeasureID: 'tbsp',\n    MeasureName: 'Tbsp'\n  }, {\n    MeasureID: 'tsp',\n    MeasureName: 'Tsp'\n  }, {\n    MeasureID: 'fl oz',\n    MeasureName: 'fl oz'\n  }, {\n    MeasureID: 'quart',\n    MeasureName: 'Quart'\n  }, {\n    MeasureID: 'pint',\n    MeasureName: 'Pint'\n  }, {\n    MeasureID: 'unit',\n    MeasureName: 'Unit'\n  }];\n  const isOnlyLetters = text => /^[A-Za-z\\s]+$/.test(text);\n  const isNumeric = value => /^[0-9]+$/.test(value);\n  const isImageFile = file => file && file.type.startsWith(\"image/\");\n  const handleInputChange = (setter, name, value) => {\n    setter(value);\n    validateInput(name, value);\n  };\n  const validateInput = (name, value, index = null) => {\n    const errors = {\n      ...formErrors\n    };\n    if (name === 'recipeName') {\n      if (!isOnlyLetters(value)) {\n        errors.recipeName = 'Recipe name should contain only letters and spaces.';\n      } else {\n        delete errors.recipeName;\n      }\n    }\n    if (name === 'description') {\n      if (value.length < 10) {\n        errors.description = 'Description should be at least 10 characters long.';\n      } else {\n        delete errors.description;\n      }\n    }\n    if (name === 'quantity') {\n      if (!isNumeric(value)) {\n        errors[`quantity${index}`] = 'Quantity should contain only numbers.';\n      } else {\n        delete errors[`quantity${index}`];\n      }\n    }\n    if (name === 'measure') {\n      if (value === '') {\n        errors[`measure${index}`] = 'Please select a measure.';\n      } else {\n        delete errors[`measure${index}`];\n      }\n    }\n    if (name === 'ingredient') {\n      if (!isOnlyLetters(value)) {\n        errors[`ingredient${index}`] = 'Ingredient name should contain only letters and spaces.';\n      } else {\n        delete errors[`ingredient${index}`];\n      }\n    }\n    if (name === 'instruction') {\n      if (value.length < 5) {\n        errors[`instruction${index}`] = 'Each step should be at least 5 characters long.';\n      } else {\n        delete errors[`instruction${index}`];\n      }\n    }\n    setFormErrors(errors);\n  };\n  const handleAddIngredient = () => {\n    setIngredients([...ingredients, {\n      quantity: '',\n      measure: '',\n      ingredient: ''\n    }]);\n  };\n  const handleDeleteIngredient = index => {\n    const newIngredients = ingredients.filter((_, i) => i !== index);\n    setIngredients(newIngredients);\n  };\n  const handleIngredientChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newIngredients = [...ingredients];\n    newIngredients[index][name] = value;\n    setIngredients(newIngredients);\n    validateInput(name, value, index);\n  };\n  const handleAddInstruction = () => {\n    setInstructions([...instructions, '']);\n  };\n  const handleDeleteInstruction = index => {\n    const newInstructions = instructions.filter((_, i) => i !== index);\n    setInstructions(newInstructions);\n  };\n  const handleInstructionChange = (index, event) => {\n    const newInstructions = [...instructions];\n    newInstructions[index] = event.target.value;\n    setInstructions(newInstructions);\n    validateInput('instruction', event.target.value, index);\n  };\n  const handlePhotoChange = event => {\n    const file = event.target.files[0];\n    setPhoto(file);\n    if (file && !isImageFile(file)) {\n      setFormErrors(prev => ({\n        ...prev,\n        photo: 'Please upload a valid image file.'\n      }));\n    } else {\n      setFormErrors(prev => {\n        const {\n          photo,\n          ...rest\n        } = prev;\n        return rest;\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Final check for all inputs before submission\n    if (Object.keys(formErrors).length === 0) {\n      try {\n        const formData = new FormData();\n        formData.append('recipeName', recipeName);\n        formData.append('description', description);\n        formData.append('ingredients', JSON.stringify(ingredients));\n        formData.append('instructions', JSON.stringify(instructions));\n        if (photo) formData.append('photo', photo);\n        const response = await fetch('http://localhost:5001/add-recipe', {\n          method: 'POST',\n          body: formData\n        });\n        const result = await response.json();\n        setSuccessMessage('Recipe added successfully!');\n        setErrorMessage('');\n        console.log(result);\n      } catch (error) {\n        setErrorMessage('An error occurred while adding the recipe. Please try again.');\n        console.error('Error adding recipe:', error);\n      }\n    } else {\n      setErrorMessage('Please fix the errors in the form.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-recipe-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeName\",\n          children: \"Recipe Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"recipeName\",\n          value: recipeName,\n          onChange: e => handleInputChange(setRecipeName, 'recipeName', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), formErrors.recipeName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formErrors.recipeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => handleInputChange(setDescription, 'description', e.target.value),\n          placeholder: \"Add a short description of the recipe\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), formErrors.description && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formErrors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"quantity\",\n          placeholder: \"Quantity\",\n          value: ingredient.quantity,\n          onChange: e => handleIngredientChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), formErrors[`quantity${index}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formErrors[`quantity${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"measure\",\n          value: ingredient.measure,\n          onChange: e => handleIngredientChange(index, e),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Measure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), measures.map(measure => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: measure.MeasureID,\n            children: measure.MeasureName\n          }, measure.MeasureID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), formErrors[`measure${index}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formErrors[`measure${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 59\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"ingredient\",\n          placeholder: \"Ingredient\",\n          value: ingredient.ingredient,\n          onChange: e => handleIngredientChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this), formErrors[`ingredient${index}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formErrors[`ingredient${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 62\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddIngredient,\n          className: \"add-button\",\n          children: \"+ Add Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDeleteIngredient(ingredients.length - 1),\n          className: \"delete-button\",\n          children: \"- Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instruction-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: `Step ${index + 1}`,\n          value: instruction,\n          onChange: e => handleInstructionChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), formErrors[`instruction${index}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formErrors[`instruction${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 63\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddInstruction,\n          className: \"add-button\",\n          children: \"+ Add Step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDeleteInstruction(instructions.length - 1),\n          className: \"delete-button\",\n          children: \"- Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"photo\",\n          children: \"Photo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"photo\",\n          onChange: handlePhotoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), formErrors.photo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formErrors.photo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 36\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n}\n_s(AddRecipePage, \"OL4mcFifWhZ3a7uYuso1nyPxYiA=\");\n_c = AddRecipePage;\nexport default AddRecipePage;\nvar _c;\n$RefreshReg$(_c, \"AddRecipePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddRecipePage","_s","recipeName","setRecipeName","description","setDescription","ingredients","setIngredients","quantity","measure","ingredient","instructions","setInstructions","photo","setPhoto","successMessage","setSuccessMessage","errorMessage","setErrorMessage","formErrors","setFormErrors","measures","MeasureID","MeasureName","isOnlyLetters","text","test","isNumeric","value","isImageFile","file","type","startsWith","handleInputChange","setter","name","validateInput","index","errors","length","handleAddIngredient","handleDeleteIngredient","newIngredients","filter","_","i","handleIngredientChange","event","target","handleAddInstruction","handleDeleteInstruction","newInstructions","handleInstructionChange","handlePhotoChange","files","prev","rest","handleSubmit","e","preventDefault","Object","keys","formData","FormData","append","JSON","stringify","response","fetch","method","body","result","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","placeholder","map","onClick","instruction","_c","$RefreshReg$"],"sources":["C:/Users/edens/Desktop/Final Project/src/AddRecipePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './css/AddRecipePage.css';\r\n\r\nfunction AddRecipePage() {\r\n    const [recipeName, setRecipeName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [ingredients, setIngredients] = useState([{ quantity: '', measure: '', ingredient: '' }]);\r\n    const [instructions, setInstructions] = useState(['']);\r\n    const [photo, setPhoto] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [formErrors, setFormErrors] = useState({});\r\n\r\n    const measures = [\r\n        { MeasureID: 'mg', MeasureName: 'mg' },\r\n        { MeasureID: 'g', MeasureName: 'g' },\r\n        { MeasureID: 'kg', MeasureName: 'kg' },\r\n        { MeasureID: 'oz', MeasureName: 'oz' },\r\n        { MeasureID: 'lb', MeasureName: 'lb' },\r\n        { MeasureID: 'ml', MeasureName: 'ml' },\r\n        { MeasureID: 'liter', MeasureName: 'liter' },\r\n        { MeasureID: 'cup', MeasureName: 'Cup' },\r\n        { MeasureID: 'tbsp', MeasureName: 'Tbsp' },\r\n        { MeasureID: 'tsp', MeasureName: 'Tsp' },\r\n        { MeasureID: 'fl oz', MeasureName: 'fl oz' },\r\n        { MeasureID: 'quart', MeasureName: 'Quart' },\r\n        { MeasureID: 'pint', MeasureName: 'Pint' },\r\n        { MeasureID: 'unit', MeasureName: 'Unit' }\r\n    ];\r\n\r\n    const isOnlyLetters = (text) => /^[A-Za-z\\s]+$/.test(text);\r\n    const isNumeric = (value) => /^[0-9]+$/.test(value);\r\n    const isImageFile = (file) => file && file.type.startsWith(\"image/\");\r\n\r\n    const handleInputChange = (setter, name, value) => {\r\n        setter(value);\r\n        validateInput(name, value);\r\n    };\r\n\r\n    const validateInput = (name, value, index = null) => {\r\n        const errors = { ...formErrors };\r\n\r\n        if (name === 'recipeName') {\r\n            if (!isOnlyLetters(value)) {\r\n                errors.recipeName = 'Recipe name should contain only letters and spaces.';\r\n            } else {\r\n                delete errors.recipeName;\r\n            }\r\n        }\r\n\r\n        if (name === 'description') {\r\n            if (value.length < 10) {\r\n                errors.description = 'Description should be at least 10 characters long.';\r\n            } else {\r\n                delete errors.description;\r\n            }\r\n        }\r\n\r\n        if (name === 'quantity') {\r\n            if (!isNumeric(value)) {\r\n                errors[`quantity${index}`] = 'Quantity should contain only numbers.';\r\n            } else {\r\n                delete errors[`quantity${index}`];\r\n            }\r\n        }\r\n\r\n        if (name === 'measure') {\r\n            if (value === '') {\r\n                errors[`measure${index}`] = 'Please select a measure.';\r\n            } else {\r\n                delete errors[`measure${index}`];\r\n            }\r\n        }\r\n\r\n        if (name === 'ingredient') {\r\n            if (!isOnlyLetters(value)) {\r\n                errors[`ingredient${index}`] = 'Ingredient name should contain only letters and spaces.';\r\n            } else {\r\n                delete errors[`ingredient${index}`];\r\n            }\r\n        }\r\n\r\n        if (name === 'instruction') {\r\n            if (value.length < 5) {\r\n                errors[`instruction${index}`] = 'Each step should be at least 5 characters long.';\r\n            } else {\r\n                delete errors[`instruction${index}`];\r\n            }\r\n        }\r\n\r\n        setFormErrors(errors);\r\n    };\r\n\r\n    const handleAddIngredient = () => {\r\n        setIngredients([...ingredients, { quantity: '', measure: '', ingredient: '' }]);\r\n    };\r\n\r\n    const handleDeleteIngredient = (index) => {\r\n        const newIngredients = ingredients.filter((_, i) => i !== index);\r\n        setIngredients(newIngredients);\r\n    };\r\n\r\n    const handleIngredientChange = (index, event) => {\r\n        const { name, value } = event.target;\r\n        const newIngredients = [...ingredients];\r\n        newIngredients[index][name] = value;\r\n        setIngredients(newIngredients);\r\n        validateInput(name, value, index);\r\n    };\r\n\r\n    const handleAddInstruction = () => {\r\n        setInstructions([...instructions, '']);\r\n    };\r\n\r\n    const handleDeleteInstruction = (index) => {\r\n        const newInstructions = instructions.filter((_, i) => i !== index);\r\n        setInstructions(newInstructions);\r\n    };\r\n\r\n    const handleInstructionChange = (index, event) => {\r\n        const newInstructions = [...instructions];\r\n        newInstructions[index] = event.target.value;\r\n        setInstructions(newInstructions);\r\n        validateInput('instruction', event.target.value, index);\r\n    };\r\n\r\n    const handlePhotoChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setPhoto(file);\r\n        if (file && !isImageFile(file)) {\r\n            setFormErrors((prev) => ({ ...prev, photo: 'Please upload a valid image file.' }));\r\n        } else {\r\n            setFormErrors((prev) => {\r\n                const { photo, ...rest } = prev;\r\n                return rest;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Final check for all inputs before submission\r\n        if (Object.keys(formErrors).length === 0) {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('recipeName', recipeName);\r\n                formData.append('description', description);\r\n                formData.append('ingredients', JSON.stringify(ingredients));\r\n                formData.append('instructions', JSON.stringify(instructions));\r\n                if (photo) formData.append('photo', photo);\r\n\r\n                const response = await fetch('http://localhost:5001/add-recipe', {\r\n                    method: 'POST',\r\n                    body: formData\r\n                });\r\n                const result = await response.json();\r\n                setSuccessMessage('Recipe added successfully!');\r\n                setErrorMessage('');\r\n                console.log(result);\r\n            } catch (error) {\r\n                setErrorMessage('An error occurred while adding the recipe. Please try again.');\r\n                console.error('Error adding recipe:', error);\r\n            }\r\n        } else {\r\n            setErrorMessage('Please fix the errors in the form.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-recipe-page\">\r\n            <h2>Add a New Recipe</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"recipeName\">Recipe Name:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"recipeName\" \r\n                        value={recipeName} \r\n                        onChange={(e) => handleInputChange(setRecipeName, 'recipeName', e.target.value)} \r\n                        required \r\n                    />\r\n                    {formErrors.recipeName && <div className=\"error\">{formErrors.recipeName}</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <textarea\r\n                        id=\"description\"\r\n                        value={description}\r\n                        onChange={(e) => handleInputChange(setDescription, 'description', e.target.value)}\r\n                        placeholder=\"Add a short description of the recipe\"\r\n                        required\r\n                    />\r\n                    {formErrors.description && <div className=\"error\">{formErrors.description}</div>}\r\n                </div>\r\n\r\n                <h3>Ingredients</h3>\r\n                {ingredients.map((ingredient, index) => (\r\n                    <div key={index} className=\"ingredient-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"quantity\" \r\n                            placeholder=\"Quantity\" \r\n                            value={ingredient.quantity} \r\n                            onChange={(e) => handleIngredientChange(index, e)} \r\n                            required \r\n                        />\r\n                        {formErrors[`quantity${index}`] && <div className=\"error\">{formErrors[`quantity${index}`]}</div>}\r\n                        <select\r\n                            name=\"measure\"\r\n                            value={ingredient.measure}\r\n                            onChange={(e) => handleIngredientChange(index, e)}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Measure</option>\r\n                            {measures.map(measure => (\r\n                                <option key={measure.MeasureID} value={measure.MeasureID}>\r\n                                    {measure.MeasureName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {formErrors[`measure${index}`] && <div className=\"error\">{formErrors[`measure${index}`]}</div>}\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"ingredient\" \r\n                            placeholder=\"Ingredient\" \r\n                            value={ingredient.ingredient} \r\n                            onChange={(e) => handleIngredientChange(index, e)} \r\n                            required \r\n                        />\r\n                        {formErrors[`ingredient${index}`] && <div className=\"error\">{formErrors[`ingredient${index}`]}</div>}\r\n                    </div>\r\n                ))}\r\n                <div className=\"button-group-inline\">\r\n                    <button type=\"button\" onClick={handleAddIngredient} className=\"add-button\">+ Add Ingredient</button>\r\n                    <button type=\"button\" onClick={() => handleDeleteIngredient(ingredients.length - 1)} className=\"delete-button\">- Delete</button>\r\n                </div>\r\n\r\n                <h3>Instructions</h3>\r\n                {instructions.map((instruction, index) => (\r\n                    <div key={index} className=\"instruction-group\">\r\n                        <textarea\r\n                            placeholder={`Step ${index + 1}`}\r\n                            value={instruction}\r\n                            onChange={(e) => handleInstructionChange(index, e)}\r\n                            required\r\n                        />\r\n                        {formErrors[`instruction${index}`] && <div className=\"error\">{formErrors[`instruction${index}`]}</div>}\r\n                    </div>\r\n                ))}\r\n                <div className=\"button-group-inline\">\r\n                    <button type=\"button\" onClick={handleAddInstruction} className=\"add-button\">+ Add Step</button>\r\n                    <button type=\"button\" onClick={() => handleDeleteInstruction(instructions.length - 1)} className=\"delete-button\">- Delete</button>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"photo\">Photo:</label>\r\n                    <input type=\"file\" id=\"photo\" onChange={handlePhotoChange} />\r\n                    {formErrors.photo && <div className=\"error\">{formErrors.photo}</div>}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"submit-button\">Submit Recipe</button>\r\n\r\n                {successMessage && <div className=\"success\">{successMessage}</div>}\r\n                {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddRecipePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}